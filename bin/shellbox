#!/bin/bash

SHELLBOX_HOME="/usr/local/shellbox"
BIN_DIR="$SHELLBOX_HOME/bin"
LOG_DIR="$SHELLBOX_HOME/log"
CONTAINERS_DIR="$SHELLBOX_HOME/containers"
UNINSTALL_SCRIPT="$SHELLBOX_HOME/lib/uninstall.sh"
DEFAULT_IMAGE="gcr.io/distroless/base-debian12:debug-nonroot"

# 初期化
init_shellbox() {
    echo "Initializing ShellBox..."
    mkdir -p "$BIN_DIR" "$LOG_DIR" "$CONTAINERS_DIR"
    echo "✅ ディレクトリ構成を初期化しました。"
}

# コマンドインストール
install_command() {
    local CMD="$1"
    local IMAGE="${2:-$DEFAULT_IMAGE}"
    local CMD_DIR="$CONTAINERS_DIR/$CMD"
    local SCRIPT_PATH="$BIN_DIR/$CMD"

    echo "Installing command: $CMD"
    echo "Using base image: $IMAGE"

    mkdir -p "$CMD_DIR"

    cat > "$CMD_DIR/Dockerfile" <<EOF
FROM $IMAGE
ENTRYPOINT ["$CMD"]
EOF

    podman build -t "shellbox_$CMD" "$CMD_DIR"

    cat > "$SCRIPT_PATH" <<EOF
#!/bin/bash
podman run --rm -v "\$PWD":/mnt shellbox_$CMD /mnt "\$@"
EOF

    chmod +x "$SCRIPT_PATH"
    echo "✅ コマンド '$CMD' をインストールしました。"
}

# アンインストール
uninstall_shellbox() {
    if [ -x "$UNINSTALL_SCRIPT" ]; then
        bash "$UNINSTALL_SCRIPT"
    else
        echo "⚠ uninstall.sh が見つかりません: $UNINSTALL_SCRIPT"
        echo "手動で /usr/local/shellbox を削除してください。"
    fi
}

# メイン処理
case "${1:-}" in
    init)
        init_shellbox
        ;;
    install)
        if [ -z "${2:-}" ]; then
            echo "Usage: shellbox install {command_name} [base_container_image]"
            exit 1
        fi
        install_command "$2" "${3:-}"
        ;;
    uninstall)
        uninstall_shellbox
        ;;
    *)
        echo "Usage: shellbox {init|install|uninstall}"
        exit 1
        ;;
esac
