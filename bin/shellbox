#!/bin/bash
set -euo pipefail

SHELLBOX_HOME="/usr/local/shellbox"
BIN_DIR="$SHELLBOX_HOME/bin"
LOG_DIR="$SHELLBOX_HOME/log"
CONTAINERS_DIR="$SHELLBOX_HOME/containers"
LIB_DIR="$SHELLBOX_HOME/lib"
TEMPLATE_PATH="$LIB_DIR/runsh_template.sh"
UNINSTALL_SCRIPT="$LIB_DIR/uninstall.sh"
DEFAULT_IMAGE="gcr.io/distroless/base-debian12:debug-nonroot"
VERSION_FILE="$SHELLBOX_HOME/VERSION"

# 初期化
init_shellbox() {
    echo "Initializing ShellBox..."
    mkdir -p "$BIN_DIR" "$LOG_DIR" "$CONTAINERS_DIR"
    echo "✅ ディレクトリ構成を初期化しました。"
}

install_command() {
    local CMD_NAME="$1"
    local ENTRYPOINT_CMD="$2"
    local IMAGE="$3"
    local FORCE="${4:-}"

    local CMD_DIR="$CONTAINERS_DIR/$CMD_NAME"
    local SCRIPT_PATH="$BIN_DIR/$CMD_NAME"
    local CMD_IMAGE="shellbox_$CMD_NAME"

    local MOUNTS_TEMPLATE="$LIB_DIR/mounts_template.conf"
    local MOUNTS_CONF_PATH="$CMD_DIR/mounts.conf"

    echo "Installing command: $CMD_NAME"
    echo "Using base image: $IMAGE"
    echo "Container ENTRYPOINT: $ENTRYPOINT_CMD"

    if [[ "$FORCE" != "force" ]]; then
        if ! podman run --rm "$IMAGE" sh -c "command -v $ENTRYPOINT_CMD" > /dev/null 2>&1; then
            echo "❌ エラー: イメージ '$IMAGE' にコマンド '$ENTRYPOINT_CMD' が存在しません。"
            echo "💡 busyboxなどで明示的に続行するには: shellbox install ... --force"
            return 1
        fi
    else
        echo "⚠ --force 指定により ENTRYPOINT 存在チェックをスキップしました。"
    fi

    mkdir -p "$CMD_DIR"

    cat > "$CMD_DIR/Dockerfile" <<EOF
FROM $IMAGE
ENTRYPOINT ["$ENTRYPOINT_CMD"]
EOF

    podman build -t "$CMD_IMAGE" "$CMD_DIR"

    if [[ ! -f "$TEMPLATE_PATH" ]]; then
        echo "❌ エラー: 実行スクリプトテンプレートが見つかりません: $TEMPLATE_PATH"
        return 1
    fi

    sed -e "s|{{CMD_IMAGE}}|$CMD_IMAGE|g" \
        -e "s|{{CMD_NAME}}|$CMD_NAME|g" \
        "$TEMPLATE_PATH" > "$SCRIPT_PATH"
    chmod +x "$SCRIPT_PATH"

    # mounts.conf のテンプレートをコピー
    if [[ -f "$MOUNTS_TEMPLATE" ]]; then
        cp "$MOUNTS_TEMPLATE" "$MOUNTS_CONF_PATH"
        echo "🪵 mounts.conf を作成しました: $MOUNTS_CONF_PATH"
    else
        echo "⚠️  mounts_template.conf が見つかりません: $MOUNTS_TEMPLATE"
    fi

    echo "✅ コマンド '$CMD_NAME' をインストールしました。"
}

uninstall_shellbox() {
    if [ -x "$UNINSTALL_SCRIPT" ]; then
        bash "$UNINSTALL_SCRIPT"
    else
        echo "⚠ uninstall.sh が見つかりません: $UNINSTALL_SCRIPT"
        echo "手動で $SHELLBOX_HOME を削除してください。"
    fi
}

# ユーティリティ機能群
edit_command() {
    local CMD="$1"
    local TARGET="$BIN_DIR/$CMD"
    [[ -f "$TARGET" ]] && "${EDITOR:-vi}" "$TARGET" || echo "❌ $CMD は存在しません。"
}

list_commands() {
    echo "📦 ShellBoxコマンド一覧:"
    find "$BIN_DIR" -type f -exec basename {} \; | sort
}

remove_command() {
    local CMD="$1"
    rm -f "$BIN_DIR/$CMD"
    rm -rf "$CONTAINERS_DIR/$CMD"
    echo "🗑️ '$CMD' を削除しました。"
}

show_paths() {
    echo "ShellBox構成パス:"
    echo "  BIN_DIR:         $BIN_DIR"
    echo "  LOG_DIR:         $LOG_DIR"
    echo "  CONTAINERS_DIR:  $CONTAINERS_DIR"
    echo "  LIB_DIR:         $LIB_DIR"
}

edit_mounts() {
    local CMD_NAME="$1"
    local MOUNTS_PATH="$CONTAINERS_DIR/$CMD_NAME/mounts.conf"
    local TEMPLATE="$LIB_DIR/mounts_template.conf"

    if [[ ! -d "$CONTAINERS_DIR/$CMD_NAME" ]]; then
        echo "❌ '$CMD_NAME' はまだインストールされていません。"
        return 1
    fi

    if [[ ! -f "$MOUNTS_PATH" && -f "$TEMPLATE" ]]; then
        cp "$TEMPLATE" "$MOUNTS_PATH"
        echo "📄 mounts.conf をテンプレートから作成しました。"
    fi

    local EDITOR_CMD="${EDITOR:-vi}"
    $EDITOR_CMD "$MOUNTS_PATH"
}

# メイン処理
case "${1:-}" in
    --version)
        [[ -f "$VERSION_FILE" ]] && cat "$VERSION_FILE" || echo "バージョン情報が見つかりません"
        ;;
    init) init_shellbox ;;
    install)
        if [ -z "${2:-}" ] || [ -z "${3:-}" ]; then
            echo "Usage: shellbox install <command_name> <entrypoint_cmd> [base_image] (optional)"
            echo "       Add -f or --force to skip entrypoint existence check"
            exit 1
        fi
        FORCE_FLAG=""
        if [[ "${4:-}" == "-f" || "${4:-}" == "--force" ]]; then
            FORCE_FLAG="force"
            install_command "$2" "$3" "$DEFAULT_IMAGE" "$FORCE_FLAG"
        elif [[ "${5:-}" == "-f" || "${5:-}" == "--force" ]]; then
            FORCE_FLAG="force"
            install_command "$2" "$3" "$4" "$FORCE_FLAG"
        else
            install_command "$2" "$3" "${4:-$DEFAULT_IMAGE}" "$FORCE_FLAG"
        fi
        ;;
    edit-mounts)
        shift
        edit_mounts "$@"
        ;;
    uninstall) uninstall_shellbox ;;
    -e) edit_command "$2" ;;
    -l) list_commands ;;
    -r) remove_command "$2" ;;
    --path) show_paths ;;
    *)
        echo "Usage: shellbox [init|install|uninstall|--version|-e <cmd>|-l|-r <cmd>|--path]"
        exit 1
        ;;
esac
