#!/bin/bash
set -euo pipefail

SHELLBOX_HOME="/usr/local/shellbox"
BIN_DIR="$SHELLBOX_HOME/bin"
LOG_DIR="$SHELLBOX_HOME/log"
CONTAINERS_DIR="$SHELLBOX_HOME/containers"
LIB_DIR="$SHELLBOX_HOME/lib"
TEMPLATE_PATH="$LIB_DIR/runsh_template.sh"
UNINSTALL_SCRIPT="$LIB_DIR/uninstall.sh"
DEFAULT_IMAGE="gcr.io/distroless/base-debian12:debug-nonroot"
VERSION_FILE="$SHELLBOX_HOME/VERSION"

# ÂàùÊúüÂåñ
init_shellbox() {
    echo "Initializing ShellBox..."
    mkdir -p "$BIN_DIR" "$LOG_DIR" "$CONTAINERS_DIR"
    echo "‚úÖ „Éá„Ç£„É¨„ÇØ„Éà„É™ÊßãÊàê„ÇíÂàùÊúüÂåñ„Åó„Åæ„Åó„Åü„ÄÇ"
}

install_command() {
    local CMD_NAME="$1"
    local ENTRYPOINT_CMD="$2"
    local IMAGE="$3"
    local FORCE="${4:-}"

    local CMD_DIR="$CONTAINERS_DIR/$CMD_NAME"
    local SCRIPT_PATH="$BIN_DIR/$CMD_NAME"
    local CMD_IMAGE="shellbox_$CMD_NAME"

    echo "Installing command: $CMD_NAME"
    echo "Using base image: $IMAGE"
    echo "Container ENTRYPOINT: $ENTRYPOINT_CMD"

    # ‰∫ãÂâç„ÉÅ„Çß„ÉÉ„ÇØÔºàforceÊåáÂÆöÊôÇ„ÅØ„Çπ„Ç≠„ÉÉ„ÉóÔºâ
    if [[ "$FORCE" != "force" ]]; then
        if ! podman run --rm "$IMAGE" sh -c "command -v $ENTRYPOINT_CMD" > /dev/null 2>&1; then
            echo "‚ùå „Ç®„É©„Éº: „Ç§„É°„Éº„Ç∏ '$IMAGE' „Å´„Ç≥„Éû„É≥„Éâ '$ENTRYPOINT_CMD' „ÅåÂ≠òÂú®„Åó„Åæ„Åõ„Çì„ÄÇ"
            echo "üí° busybox„Å™„Å©„ÅßÊòéÁ§∫ÁöÑ„Å´Á∂öË°å„Åô„Çã„Å´„ÅØ: shellbox install ... --force"
            return 1
        fi
    else
        echo "‚ö† --force ÊåáÂÆö„Å´„Çà„Çä ENTRYPOINT Â≠òÂú®„ÉÅ„Çß„ÉÉ„ÇØ„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Åæ„Åó„Åü„ÄÇ"
    fi

    mkdir -p "$CMD_DIR"

    # DockerfileÁîüÊàê
    cat > "$CMD_DIR/Dockerfile" <<EOF
FROM $IMAGE
ENTRYPOINT ["$ENTRYPOINT_CMD"]
EOF

    # „Ç≥„É≥„ÉÜ„Éä„Éì„É´„Éâ
    podman build -t "$CMD_IMAGE" "$CMD_DIR"

    # „ÉÜ„É≥„Éó„É¨„Éº„Éà„Åã„ÇâÂÆüË°å„Çπ„ÇØ„É™„Éó„ÉàÁîüÊàê
    if [[ ! -f "$TEMPLATE_PATH" ]]; then
        echo "‚ùå „Ç®„É©„Éº: ÂÆüË°å„Çπ„ÇØ„É™„Éó„Éà„ÉÜ„É≥„Éó„É¨„Éº„Éà„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì: $TEMPLATE_PATH"
        return 1
    fi

    sed "s|{{CMD_IMAGE}}|$CMD_IMAGE|g" "$TEMPLATE_PATH" > "$SCRIPT_PATH"
    chmod +x "$SCRIPT_PATH"

    echo "‚úÖ „Ç≥„Éû„É≥„Éâ '$CMD_NAME' „Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åó„Åü„ÄÇ"
}

# „Ç¢„É≥„Ç§„É≥„Çπ„Éà„Éº„É´
uninstall_shellbox() {
    if [ -x "$UNINSTALL_SCRIPT" ]; then
        bash "$UNINSTALL_SCRIPT"
    else
        echo "‚ö† uninstall.sh „ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì: $UNINSTALL_SCRIPT"
        echo "ÊâãÂãï„Åß $SHELLBOX_HOME „ÇíÂâäÈô§„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ"
    fi
}

# „É°„Ç§„É≥Âá¶ÁêÜ
case "${1:-}" in
    --version|-v)
        if [[ -f "$VERSION_FILE" ]]; then
            cat "$VERSION_FILE"
        else
            echo "„Éê„Éº„Ç∏„Éß„É≥ÊÉÖÂ†±„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì"
        fi
        exit 0
        ;;
    init)
        init_shellbox
        ;;
    install)
        if [ -z "${2:-}" ] || [ -z "${3:-}" ]; then
            echo "Usage: shellbox install <command_name> <entrypoint_cmd> [base_image] (optional)"
            echo "       Add -f or --force to skip entrypoint existence check"
            exit 1
        fi

        FORCE_FLAG=""

        if [[ "${4:-}" == "-f" || "${4:-}" == "--force" ]]; then
            FORCE_FLAG="force"
            install_command "$2" "$3" "$DEFAULT_IMAGE" "$FORCE_FLAG"
        elif [[ "${5:-}" == "-f" || "${5:-}" == "--force" ]]; then
            FORCE_FLAG="force"
            install_command "$2" "$3" "$4" "$FORCE_FLAG"
        else
            install_command "$2" "$3" "${4:-$DEFAULT_IMAGE}" "$FORCE_FLAG"
        fi
        ;;
    uninstall)
        uninstall_shellbox
        ;;
    *)
        echo "Usage: shellbox [init|install|uninstall|--version]"
        exit 1
        ;;
esac
